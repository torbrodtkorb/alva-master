<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="AVR32DA48" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8X" atdf:family="AVR DA" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.8" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="512"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8des"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8spmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
    <edc:InstructionSet edc:instructionsetid="avr8eind"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpmx"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="1" edc:cname="NMI" edc:desc="" ltx:memberofperipheral="CRCSCAN"/>
    <edc:Interrupt edc:irq="2" edc:cname="VLM" edc:desc="" ltx:memberofperipheral="BOD"/>
    <edc:Interrupt edc:irq="3" edc:cname="CNT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="4" edc:cname="PIT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="5" edc:cname="CCL" edc:desc="" ltx:memberofperipheral="CCL"/>
    <edc:Interrupt edc:irq="6" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTA"/>
    <edc:Interrupt edc:irq="7" edc:cname="LUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="7" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="8" edc:cname="HUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="9" edc:cname="CMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="9" edc:cname="LCMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="CMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="LCMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="CMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="LCMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB0"/>
    <edc:Interrupt edc:irq="13" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB1"/>
    <edc:Interrupt edc:irq="14" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCD0"/>
    <edc:Interrupt edc:irq="15" edc:cname="TRIG" edc:desc="" ltx:memberofperipheral="TCD0"/>
    <edc:Interrupt edc:irq="16" edc:cname="TWIS" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="17" edc:cname="TWIM" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="18" edc:cname="INT" edc:desc="" ltx:memberofperipheral="SPI0"/>
    <edc:Interrupt edc:irq="19" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="20" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="21" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="22" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTD"/>
    <edc:Interrupt edc:irq="23" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC0"/>
    <edc:Interrupt edc:irq="24" edc:cname="RESRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="25" edc:cname="WCMP" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="26" edc:cname="ZCD" edc:desc="" ltx:memberofperipheral="ZCD0"/>
    <edc:Interrupt edc:irq="27" edc:cname="PTC" edc:desc="" ltx:memberofperipheral="PTC"/>
    <edc:Interrupt edc:irq="28" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC1"/>
    <edc:Interrupt edc:irq="29" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTC"/>
    <edc:Interrupt edc:irq="30" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB2"/>
    <edc:Interrupt edc:irq="31" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="32" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="33" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="34" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTF"/>
    <edc:Interrupt edc:irq="35" edc:cname="EE" edc:desc="" ltx:memberofperipheral="NVMCTRL"/>
    <edc:Interrupt edc:irq="36" edc:cname="INT" edc:desc="" ltx:memberofperipheral="SPI1"/>
    <edc:Interrupt edc:irq="37" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART2"/>
    <edc:Interrupt edc:irq="38" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART2"/>
    <edc:Interrupt edc:irq="39" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART2"/>
    <edc:Interrupt edc:irq="40" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC2"/>
    <edc:Interrupt edc:irq="41" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB3"/>
    <edc:Interrupt edc:irq="42" edc:cname="TWIS" edc:desc="" ltx:memberofperipheral="TWI1"/>
    <edc:Interrupt edc:irq="43" edc:cname="TWIM" edc:desc="" ltx:memberofperipheral="TWI1"/>
    <edc:Interrupt edc:irq="44" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTB"/>
    <edc:Interrupt edc:irq="45" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTE"/>
    <edc:Interrupt edc:irq="46" edc:cname="LUNF" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="46" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="47" edc:cname="HUNF" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="48" edc:cname="CMP0" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="48" edc:cname="LCMP0" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="49" edc:cname="CMP1" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="49" edc:cname="LCMP1" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="50" edc:cname="CMP2" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="50" edc:cname="LCMP2" edc:desc="" ltx:memberofperipheral="TCA1"/>
    <edc:Interrupt edc:irq="51" edc:cname="ZCD" edc:desc="" ltx:memberofperipheral="ZCD1"/>
    <edc:Interrupt edc:irq="52" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART3"/>
    <edc:Interrupt edc:irq="53" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART3"/>
    <edc:Interrupt edc:irq="54" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART3"/>
    <edc:Interrupt edc:irq="55" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART4"/>
    <edc:Interrupt edc:irq="56" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART4"/>
    <edc:Interrupt edc:irq="57" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART4"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC0" edc:desc=""/>
    <edc:Peripheral edc:cname="AC1" edc:desc=""/>
    <edc:Peripheral edc:cname="AC2" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC0" edc:desc=""/>
    <edc:Peripheral edc:cname="BOD" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CLKCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="CPU" edc:desc=""/>
    <edc:Peripheral edc:cname="CPUINT" edc:desc=""/>
    <edc:Peripheral edc:cname="CRCSCAN" edc:desc=""/>
    <edc:Peripheral edc:cname="DAC0" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSE" edc:desc=""/>
    <edc:Peripheral edc:cname="GPR" edc:desc=""/>
    <edc:Peripheral edc:cname="LOCK" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTB" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTD" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTE" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTF" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTMUX" edc:desc=""/>
    <edc:Peripheral edc:cname="PTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SIGROW" edc:desc=""/>
    <edc:Peripheral edc:cname="SLPCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="SPI0" edc:desc=""/>
    <edc:Peripheral edc:cname="SPI1" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSCFG" edc:desc=""/>
    <edc:Peripheral edc:cname="TCA0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCA1" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB1" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB2" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB3" edc:desc=""/>
    <edc:Peripheral edc:cname="TCD0" edc:desc=""/>
    <edc:Peripheral edc:cname="TWI0" edc:desc=""/>
    <edc:Peripheral edc:cname="TWI1" edc:desc=""/>
    <edc:Peripheral edc:cname="USART0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART1" edc:desc=""/>
    <edc:Peripheral edc:cname="USART2" edc:desc=""/>
    <edc:Peripheral edc:cname="USART3" edc:desc=""/>
    <edc:Peripheral edc:cname="USART4" edc:desc=""/>
    <edc:Peripheral edc:cname="USERROW" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTB" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTD" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTE" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTF" edc:desc=""/>
    <edc:Peripheral edc:cname="VREF" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
    <edc:Peripheral edc:cname="ZCD0" edc:desc=""/>
    <edc:Peripheral edc:cname="ZCD1" edc:desc=""/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="PROGMEM" edc:beginaddr="0x0" edc:endaddr="0x4000" atdf:pagesize="0x200" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="21"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="22"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="23"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="25"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="26"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="27"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="29"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="30"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="31"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="IO" edc:beginaddr="0x0" edc:endaddr="0x100C" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x0"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x2"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x5"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x6"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTB">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x8"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x9"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xA"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTD">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTE" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x10"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTE" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x11"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTE" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x12"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTE" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x13">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTE">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x14"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x15"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x16"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x17">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTF">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x18"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1C"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1D"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1E"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1F"/>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CCP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x34">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CCP" edc:nzwidth="0x8" edc:desc="CCP signature">
                <edc:SFRFieldSemantic edc:cname="SPM" edc:desc="SPM Instruction Protection" edc:when="(field &amp; 0xFF) == 0x9D"/>
                <edc:SFRFieldSemantic edc:cname="IOREG" edc:desc="IO Register Protection" edc:when="(field &amp; 0xFF) == 0xD8"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x35"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0111111111111111" edc:mclr="0111111111111111" edc:_addr="0x3D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="N Exclusive Or V Flag"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Transfer Bit"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="RSTFR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power on Reset flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown out detector Reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watch dog Reset flag"/>
              <edc:SFRFieldDef edc:cname="SWRF" edc:nzwidth="0x1" edc:desc="Software Reset flag"/>
              <edc:SFRFieldDef edc:cname="UPDIRF" edc:nzwidth="0x1" edc:desc="UPDI Reset flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="SWRR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software reset enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x42"/>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="SEN" edc:nzwidth="0x1" edc:desc="Sleep enable"/>
              <edc:SFRFieldDef edc:cname="SMODE" edc:nzwidth="0x2" edc:desc="Sleep mode">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="VREGCTRL" edc:nzwidth="0x8" edc:access="---n-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x17" edc:_addr="0x51">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x3" edc:desc="Performance Mode">
                <edc:SFRFieldSemantic edc:cname="AUTO" edc:desc="" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="" edc:when="(field &amp; 0x7) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="HTLLEN" edc:nzwidth="0x1" edc:desc="High Temperature Low Leakage Enable">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x52"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLA" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock select">
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="Internal 32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768 kHz crystal oscillator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CLKOUT" edc:nzwidth="0x1" edc:desc="System clock out"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLB" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="PEN" edc:nzwidth="0x1" edc:desc="Prescaler enable"/>
              <edc:SFRFieldDef edc:cname="PDIV" edc:nzwidth="0x4" edc:desc="Prescaler division">
                <edc:SFRFieldSemantic edc:cname="2X" edc:desc="2X" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4X" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8X" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16X" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="32X" edc:desc="32X" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="64X" edc:desc="64X" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="6X" edc:desc="6X" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="10X" edc:desc="10X" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="12X" edc:desc="12X" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="24X" edc:desc="24X" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="48X" edc:desc="48X" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKLOCK" edc:nzwidth="0x8" edc:access="-------n" edc:impl="0x1" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="LOCKEN" edc:nzwidth="0x1" edc:desc="lock ebable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKSTATUS" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="SOSC" edc:nzwidth="0x1" edc:desc="System Oscillator changing"/>
              <edc:SFRFieldDef edc:cname="OSCHFS" edc:nzwidth="0x1" edc:desc="High frequency oscillator status"/>
              <edc:SFRFieldDef edc:cname="OSC32KS" edc:nzwidth="0x1" edc:desc="32KHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="XOSC32KS" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator status"/>
              <edc:SFRFieldDef edc:cname="EXTS" edc:nzwidth="0x1" edc:desc="External Clock status"/>
              <edc:SFRFieldDef edc:cname="PLLS" edc:nzwidth="0x1" edc:desc="PLL oscillator status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x64"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSCHFCTRLA" edc:nzwidth="0x8" edc:access="n-nnnn-n" edc:por="00001100" edc:mclr="00001100" edc:impl="0xBD" edc:_addr="0x68">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="AUTOTUNE" edc:nzwidth="0x1" edc:desc="Autotune"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FRQSEL" edc:nzwidth="0x4" edc:desc="Frequency select">
                <edc:SFRFieldSemantic edc:cname="1M" edc:desc="1 MHz system clock" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2M" edc:desc="2 MHz system clock" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="3M" edc:desc="3 MHz system clock" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4M" edc:desc="4 MHz system clock (default)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="8M" edc:desc="8 MHz system clock" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="12M" edc:desc="12 MHz system clock" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="16M" edc:desc="16 MHz system clock" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="20M" edc:desc="20 MHz system clock" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="24M" edc:desc="24 MHz system clock" edc:when="(field &amp; 0xF) == 0x09"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSCHFTUNE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="TUNE" edc:nzwidth="0x8" edc:desc="Tune"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x6A"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="PLLCTRLA" edc:nzwidth="0x8" edc:access="nn----nn" edc:impl="0xC3" edc:_addr="0x70">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="MULFAC" edc:nzwidth="0x2" edc:desc="Multiplication factor">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="PLL is disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2x" edc:desc="2 x multiplication factor" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="3x" edc:desc="3 x multiplication factor" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="SOURCE" edc:nzwidth="0x1" edc:desc="Source"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x71"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC32KCTRLA" edc:nzwidth="0x8" edc:access="n-------" edc:por="00000000" edc:mclr="00000000" edc:impl="0x80" edc:_addr="0x78">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x7"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x79"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="XOSC32KCTRLA" edc:nzwidth="0x8" edc:access="n-nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xB7" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:nzwidth="0x1" edc:desc="Low power mode"/>
              <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x1" edc:desc="Select"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:nzwidth="0x2" edc:desc="Crystal startup time">
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1k cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16K" edc:desc="16k cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="32k cycles" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64K" edc:desc="64k cycles" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x1F" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="Operation in sleep mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="Operation in active mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="Sample frequency">
                <edc:SFRFieldSemantic edc:cname="128HZ" edc:desc="128Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="32HZ" edc:desc="32Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="Bod level">
                <edc:SFRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.9 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL1" edc:desc="2.45 V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.7 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL3" edc:desc="2.85 V" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x82"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="VLMCTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMLVL" edc:nzwidth="0x2" edc:desc="voltage level monitor level">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="VLM Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="5ABOVE" edc:desc="VLM threshold 5% above BOD level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="15ABOVE" edc:desc="VLM threshold 15% above BOD level" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="25ABOVE" edc:desc="VLM threshold 25% above BOD level" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x89">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIE" edc:nzwidth="0x1" edc:desc="voltage level monitor interrrupt enable"/>
              <edc:SFRFieldDef edc:cname="VLMCFG" edc:nzwidth="0x2" edc:desc="Configuration">
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="VDD falls below VLM threshold" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="VDD rises above VLM threshold" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="VDD crosses VLM threshold" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIF" edc:nzwidth="0x1" edc:desc="Voltage level monitor interrupt flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMS" edc:nzwidth="0x1" edc:desc="Voltage level monitor status">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="The voltage is above the VLM threshold level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="The voltage is below the VLM threshold level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x8C"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="ADC0REF" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0xA0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference select">
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="Internal 1.024V reference" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="Internal 2.048V reference" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="Internal 4.096V reference" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="2V500" edc:desc="Internal 2.500V reference" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD as reference" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference on VREFA pin" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always on"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xA1"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="DAC0REF" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0xA2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference select">
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="Internal 1.024V reference" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="Internal 2.048V reference" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="Internal 4.096V reference" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="2V500" edc:desc="Internal 2.500V reference" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD as reference" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference on VREFA pin" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always on"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xA3"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="ACREF" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0xA4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference select">
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="Internal 1.024V reference" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="Internal 2.048V reference" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="Internal 4.096V reference" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="2V500" edc:desc="Internal 2.500V reference" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD as reference" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference on VREFA pin" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always on"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5B" edc:_addr="0xA5"/>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x100">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="n------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x81" edc:_addr="0x101">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="SYNCBUSY" edc:nzwidth="0x1" edc:desc="Syncronization busy"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x102"/>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nn----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x61" edc:_addr="0x110">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0RR" edc:nzwidth="0x1" edc:desc="Round-robin Scheduling Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CVT" edc:nzwidth="0x1" edc:desc="Compact Vector Table"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x111">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0EX" edc:nzwidth="0x1" edc:desc="Level 0 Interrupt Executing"/>
              <edc:SFRFieldDef edc:cname="LVL1EX" edc:nzwidth="0x1" edc:desc="Level 1 Interrupt Executing"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="NMIEX" edc:nzwidth="0x1" edc:desc="Non-maskable Interrupt Executing"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x112">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:desc="Interrupt Level Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x113">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:desc="Interrupt Vector with High Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x114"/>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x120">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable CRC scan"/>
              <edc:SFRFieldDef edc:cname="NMIEN" edc:nzwidth="0x1" edc:desc="Enable NMI Trigger"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset CRC scan"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x121">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="CRC on entire flash" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="APPLICATION" edc:desc="CRC on boot and appl section of flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOOT" edc:desc="CRC on boot section of flash" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000010" edc:mclr="00000010" edc:impl="0x3" edc:_addr="0x122">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="CRC Busy"/>
              <edc:SFRFieldDef edc:cname="OK" edc:nzwidth="0x1" edc:desc="CRC Ok"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1D" edc:_addr="0x123"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x140">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="RTCEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Correction enable"/>
              <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaling Factor">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="RTC Clock / 1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="RTC Clock / 2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="RTC Clock / 4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="RTC Clock / 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="RTC Clock / 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="RTC Clock / 32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="RTC Clock / 64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="RTC Clock / 128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="RTC Clock / 256" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="RTC Clock / 512" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="RTC Clock / 1024" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="RTC Clock / 2048" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="RTC Clock / 4096" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="RTC Clock / 8192" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="RTC Clock / 16384" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="RTC Clock / 32768" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run In Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="----rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x141">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLABUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CNTBUSY" edc:nzwidth="0x1" edc:desc="Count Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="PERBUSY" edc:nzwidth="0x1" edc:desc="Period Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CMPBUSY" edc:nzwidth="0x1" edc:desc="Comparator Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x142">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt enable"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x143">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x144"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x145">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CALIB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x146">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x7" edc:desc="Error Correction Value"/>
              <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Error Correction Sign Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLKSEL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x147">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz from OSC32K" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="1.024 kHz from OSC32K" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768 kHz from XOSC32K" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x148"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:_addr="0x14A"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x14C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x14E"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITCTRLA" edc:nzwidth="0x8" edc:access="-nnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x79" edc:_addr="0x150">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PITEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CYC4" edc:desc="RTC Clock Cycles 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="RTC Clock Cycles 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="RTC Clock Cycles 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="RTC Clock Cycles 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="RTC Clock Cycles 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="RTC Clock Cycles 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="RTC Clock Cycles 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="RTC Clock Cycles 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="RTC Clock Cycles 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="RTC Clock Cycles 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="RTC Clock Cycles 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="RTC Clock Cycles 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="RTC Clock Cycles 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="CYC32768" edc:desc="RTC Clock Cycles 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITSTATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x151">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLBUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x152">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x153">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x154"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITDBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x155">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6A" edc:_addr="0x156"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x41" edc:_addr="0x1C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL1" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL2" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1C4"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTCTRL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INTMODE0" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT0">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE1" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT1">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE2" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT2">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE3" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTCTRL1" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INTMODE4" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT4">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE5" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT5">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x1C7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x6" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT4CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT4CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT4CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1DA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1DB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT5CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1DC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT5CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1DD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="ZCD0 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO0 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC1" edc:desc="AC1 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="ZCD1 OUT input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO1 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT5CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1DE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC2" edc:desc="AC2 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART2" edc:desc="USART2 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="TCA1 WO2 input source" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="TCB2" edc:desc="TCB2 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOC input source" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1DF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x20" edc:_addr="0x1E0"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x200">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:desc="Software event on channel select">
                <edc:SFRFieldSemantic edc:cname="CH0" edc:desc="Software event on channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CH1" edc:desc="Software event on channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CH2" edc:desc="Software event on channel 2" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CH3" edc:desc="Software event on channel 3" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CH4" edc:desc="Software event on channel 4" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CH5" edc:desc="Software event on channel 5" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="CH6" edc:desc="Software event on channel 6" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="CH7" edc:desc="Software event on channel 7" edc:when="(field &amp; 0xFF) == 0x80"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVENTB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x201">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SWEVENTB" edc:nzwidth="0x2" edc:desc="Software event on channel select">
                <edc:SFRFieldSemantic edc:cname="CH8" edc:desc="Software event on channel 8" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CH9" edc:desc="Software event on channel 9" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x202"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x210">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL0" edc:nzwidth="0x8" edc:desc="Channel 0 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x211">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL1" edc:nzwidth="0x8" edc:desc="Channel 1 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x212">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL2" edc:nzwidth="0x8" edc:desc="Channel 2 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN6" edc:desc="Port C Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN7" edc:desc="Port C Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN0" edc:desc="Port D Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN1" edc:desc="Port D Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN2" edc:desc="Port D Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN3" edc:desc="Port D Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN4" edc:desc="Port D Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN5" edc:desc="Port D Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN6" edc:desc="Port D Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN7" edc:desc="Port D Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x213">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL3" edc:nzwidth="0x8" edc:desc="Channel 3 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN6" edc:desc="Port C Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN7" edc:desc="Port C Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN0" edc:desc="Port D Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN1" edc:desc="Port D Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN2" edc:desc="Port D Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN3" edc:desc="Port D Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN4" edc:desc="Port D Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN5" edc:desc="Port D Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN6" edc:desc="Port D Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_PIN7" edc:desc="Port D Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x214">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL4" edc:nzwidth="0x8" edc:desc="Channel 4 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN0" edc:desc="Port E Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN1" edc:desc="Port E Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN2" edc:desc="Port E Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN3" edc:desc="Port E Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN0" edc:desc="Port F Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN1" edc:desc="Port F Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN2" edc:desc="Port F Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN3" edc:desc="Port F Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN4" edc:desc="Port F Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN5" edc:desc="Port F Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN6" edc:desc="Port F Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x215">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL5" edc:nzwidth="0x8" edc:desc="Channel 5 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN0" edc:desc="Port E Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN1" edc:desc="Port E Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN2" edc:desc="Port E Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTE_PIN3" edc:desc="Port E Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN0" edc:desc="Port F Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN1" edc:desc="Port F Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN2" edc:desc="Port F Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN3" edc:desc="Port F Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN4" edc:desc="Port F Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN5" edc:desc="Port F Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_PIN6" edc:desc="Port F Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x216">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL6" edc:nzwidth="0x8" edc:desc="Channel 6 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x217">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL7" edc:nzwidth="0x8" edc:desc="Channel 7 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x218">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL8" edc:nzwidth="0x8" edc:desc="Channel 8 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x219">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL9" edc:nzwidth="0x8" edc:desc="Channel 9 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT4" edc:desc="Configurable Custom Logic LUT4" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT5" edc:desc="Configurable Custom Logic LUT5" edc:when="(field &amp; 0xFF) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x21"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x22"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC 0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="PTC_RESRDY" edc:desc="PTC Result Ready" edc:when="(field &amp; 0xFF) == 0x28"/>
                <edc:SFRFieldSemantic edc:cname="ZCD0" edc:desc="Zero Cross Detect 0 out" edc:when="(field &amp; 0xFF) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="ZCD1" edc:desc="Zero Cross Detect 1 out" edc:when="(field &amp; 0xFF) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="USART2_XCK" edc:desc="USART 2 XCK" edc:when="(field &amp; 0xFF) == 0x62"/>
                <edc:SFRFieldSemantic edc:cname="USART3_XCK" edc:desc="USART 3 XCK" edc:when="(field &amp; 0xFF) == 0x63"/>
                <edc:SFRFieldSemantic edc:cname="USART4_XCK" edc:desc="USART 4 XCK" edc:when="(field &amp; 0xFF) == 0x64"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="SPI1_SCK" edc:desc="SPI 1 SCK" edc:when="(field &amp; 0xFF) == 0x69"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_OVF_LUNF" edc:desc="Timer/Counter A1 overflow / low byte timer underflow" edc:when="(field &amp; 0xFF) == 0x88"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_HUNF" edc:desc="Timer/Counter A1 high byte timer underflow" edc:when="(field &amp; 0xFF) == 0x89"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP0_LCMP0" edc:desc="Timer/Counter A1 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x8C"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP1_LCMP1" edc:desc="Timer/Counter A1 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x8D"/>
                <edc:SFRFieldSemantic edc:cname="TCA1_CMP2_LCMP2" edc:desc="Timer/Counter A1 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x8E"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_CAPT" edc:desc="Timer/Counter B2 capture" edc:when="(field &amp; 0xFF) == 0xA4"/>
                <edc:SFRFieldSemantic edc:cname="TCB2_OVF" edc:desc="Timer/Counter B2 overflow" edc:when="(field &amp; 0xFF) == 0xA5"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_CAPT" edc:desc="Timer/Counter B3 capture" edc:when="(field &amp; 0xFF) == 0xA6"/>
                <edc:SFRFieldSemantic edc:cname="TCB3_OVF" edc:desc="Timer/Counter B3 overflow" edc:when="(field &amp; 0xFF) == 0xA7"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 event 0" edc:when="(field &amp; 0xFF) == 0xB0"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 event 1" edc:when="(field &amp; 0xFF) == 0xB1"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 event 2" edc:when="(field &amp; 0xFF) == 0xB2"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 event 3" edc:when="(field &amp; 0xFF) == 0xB3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x21A"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x220">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x221">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x222">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x223">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x224">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x225">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x226">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x227">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT4A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x228">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT4B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x229">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT5A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT5B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERADC0START" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERPTCSTART" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x230">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x231">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x232">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x233">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x234"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART0IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x235">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART1IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x236">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART2IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x237">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART3IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x238">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART4IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x239">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x23A"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x23B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x23C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA1CNTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x23D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA1CNTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x23E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x23F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x240">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x241">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x242">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB2CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x243">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB2COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x244">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB3CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x245">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB3COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x246">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x247"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCD0INPUTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x249">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCD0INPUTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x24A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off, No Eventsys Channel connected" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL6" edc:desc="Connect user to event channel 6" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL7" edc:desc="Connect user to event channel 7" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL8" edc:desc="Connect user to event channel 8" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL9" edc:desc="Connect user to event channel 9" edc:when="(field &amp; 0xFF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1B5" edc:_addr="0x24B"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x401"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x402"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x403"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x404"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x405"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x406"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x407"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x408"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x409">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTACTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x40B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x410">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x411">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x412">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x413">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x414">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x415">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x416">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x417">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x418"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x420"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x421"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x422"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x423"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x424"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x425"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x426"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x427"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x428"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x429">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTBCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x42B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x430">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x431">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x432">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x433">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x434">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x435">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x436">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x437">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x438"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x440"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x441"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x442"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x443"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x444"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x445"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x446"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x447"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x448"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x449">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PORTCCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x44A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x44B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x44F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x450">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x451">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x452">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x453">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x454">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x455">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x456">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x457">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x458"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x460"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x461"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x462"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x463"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x464"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x465"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x466"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x467"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x468"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x469">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PORTDCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x46A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x46B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x46F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x470">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x471">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x472">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x473">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x474">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x475">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x476">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x477">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x478"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x480"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x481"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x482"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x483"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x484"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x485"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x486"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x487"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x488"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x489">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PORTECTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x48A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x48B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x48C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x48D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x48E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x48F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x490">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x491">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x492">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x493">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x494">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x495">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x496">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x497">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTE">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x498"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A0"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A1"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A2"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A3"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A4"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A5"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A6"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A7"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A8"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PORTFCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4AA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4AB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:desc="Pin control update mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:desc="Pin control set mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:desc="Pin control clear mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4AF"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x4B7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x128" edc:_addr="0x4B8"/>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="EVSYSROUTEA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x5E0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="EVOUTA" edc:nzwidth="0x1" edc:desc="Event Output A">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUT on PA7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTB" edc:nzwidth="0x1" edc:desc="Event Output B">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PB2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTC" edc:nzwidth="0x1" edc:desc="Event Output C">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PC2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUT on PC7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTD" edc:nzwidth="0x1" edc:desc="Event Output D">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PD2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUT on PD7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTE" edc:nzwidth="0x1" edc:desc="Event Output E">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PE2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTF" edc:nzwidth="0x1" edc:desc="Event Output F">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PF2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CCLROUTEA" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x5E1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="LUT0" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PA3 In: PA0, PA1, PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PA6 In: PA0, PA1, PA2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT1" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PC3 In: PC0, PC1, PC2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PC6 In: PC0, PC1, PC2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT2" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 2 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PD3 In: PD0, PD1, PD2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PD6 In: PD0, PD1, PD2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT3" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 3 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PF3 In: PF0, PF1, PF2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT4" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 4 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PB3 In: PB0, PB1, PB2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="USARTROUTEA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x5E2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="USART0" edc:nzwidth="0x2" edc:desc="USART0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PA0, PA1, PA2, PA3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PA4, PA5, PA6, PA7" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USART1" edc:nzwidth="0x2" edc:desc="USART1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PC0, PC1, PC2, PC3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PC4, PC5, PC6, PC7" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USART2" edc:nzwidth="0x2" edc:desc="USART2 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PF0, PF1, PF2, PF3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PF4, PF5" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USART3" edc:nzwidth="0x2" edc:desc="USART3  Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PB0, PB1, PB2, PB3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PB4, PB5, PB6, PB7" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="USARTROUTEB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5E3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="USART4" edc:nzwidth="0x2" edc:desc="USART4 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PE0, PE1, PE2, PE3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="SPIROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="SPI0" edc:nzwidth="0x2" edc:desc="SPI0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PA4, PA5, PA6, PA7" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PE0, PE1, PE2, PE3" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SPI1" edc:nzwidth="0x2" edc:desc="SPI1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PC0, PC1, PC2, PC3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PC4, PC5, PC6, PC7" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TWIROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TWI0" edc:nzwidth="0x2" edc:desc="TWI0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PA2, PA3, PC2, PC3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PA2, PA3, PC6, PC7" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ALT2" edc:desc="PC2, PC3, PC6, PC7" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TWI1" edc:nzwidth="0x2" edc:desc="TWI1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PF2, PF3, PB2, PB3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT2" edc:desc="PB2, PB3, PB6, PB7" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCAROUTEA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x5E6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCA0" edc:nzwidth="0x3" edc:desc="TCA0 Signals">
                <edc:SFRFieldSemantic edc:cname="PORTA" edc:desc="PA0, PA1, PA2, PA3, PA4, PA5" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PORTB" edc:desc="PB0, PB1, PB2, PB3, PB4, PB5" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PORTC" edc:desc="PC0, PC1, PC2, PC3, PC4, PC5" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PORTD" edc:desc="PD0, PD1, PD2, PD3, PD4, PD5" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PORTE" edc:desc="PE0, PE1, PE2, PE3, PE4, PE5" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PORTF" edc:desc="PF0, PF1, PF2, PF3, PF4, PF5" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA1" edc:nzwidth="0x3" edc:desc="TCA1 Signals">
                <edc:SFRFieldSemantic edc:cname="PORTB" edc:desc="PB0, PB1, PB2, PB3, PB4, PB5" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PORTC" edc:desc="PC4, PC5, PC6" edc:when="(field &amp; 0x7) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCBROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCB0" edc:nzwidth="0x1" edc:desc="TCB0 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PF4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCB1" edc:nzwidth="0x1" edc:desc="TCB1 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PA3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PF5" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCB2" edc:nzwidth="0x1" edc:desc="TCB2 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PC0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PB4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCB3" edc:nzwidth="0x1" edc:desc="TCB3 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PB5" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PC1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCDROUTEA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x5E8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCD0" edc:nzwidth="0x3" edc:desc="TCD0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PA4, PA5, PA6, PA7" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PB4, PB5, PB6, PB7" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ALT2" edc:desc="PF0, PF1, PF2, PF3" edc:when="(field &amp; 0x7) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="ACROUTEA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x5E9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="AC0" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="OUT on PA7" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="OUT on PC6" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="AC1" edc:nzwidth="0x1" edc:desc="Analog Comparator 1 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="OUT on PA7" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="OUT on PC6" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="AC2" edc:nzwidth="0x1" edc:desc="Analog Comparator 2 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="OUT on PA7" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="OUT on PC6" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="ZCDROUTEA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5EA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="ZCD0" edc:nzwidth="0x1" edc:desc="Zero Cross Detector 0 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="OUT on PA7" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="OUT on PC7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ZCD1" edc:nzwidth="0x1" edc:desc="Zero Cross Detector 1 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="OUT on PA7" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="OUT on PC7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x15" edc:_addr="0x5EB"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0x600">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free running mode"/>
              <edc:SFRFieldDef edc:cname="RESSEL" edc:nzwidth="0x2" edc:desc="Resolution selection">
                <edc:SFRFieldSemantic edc:cname="12BIT" edc:desc="12-bit mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit mode" edc:when="(field &amp; 0x3) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left adjust result"/>
              <edc:SFRFieldDef edc:cname="CONVMODE" edc:nzwidth="0x1" edc:desc="Conversion mode">
                <edc:SFRFieldSemantic edc:cname="SINGLEENDED" edc:desc="Single-Ended mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIFF" edc:desc="Differential mode" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:nzwidth="0x1" edc:desc="Run standby mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x601">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:nzwidth="0x3" edc:desc="Accumulation Samples">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No accumulation" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="2 results accumulated" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="4 results accumulated" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="8 results accumulated" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="16 results accumulated" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="32 results accumulated" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="64 results accumulated" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ACC128" edc:desc="128 results accumulated" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x602">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="Clock Pre-scaler">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER divided by 2" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER divided by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER divided by 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="CLK_PER divided by 12" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER divided by 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV20" edc:desc="CLK_PER divided by 20" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV24" edc:desc="CLK_PER divided by 24" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV28" edc:desc="CLK_PER divided by 28" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_PER divided by 32" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV48" edc:desc="CLK_PER divided by 48" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER divided by 64" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV96" edc:desc="CLK_PER divided by 96" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER divided by 128" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER divided by 256" edc:when="(field &amp; 0xF) == 0x0D"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nnn-nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xEF" edc:_addr="0x603">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPDLY" edc:nzwidth="0x4" edc:desc="Sampling Delay Selection">
                <edc:SFRFieldSemantic edc:cname="DLY0" edc:desc="Delay 0 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DLY1" edc:desc="Delay 1 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DLY2" edc:desc="Delay 2 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DLY3" edc:desc="Delay 3 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DLY4" edc:desc="Delay 4 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DLY5" edc:desc="Delay 5 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DLY6" edc:desc="Delay 6 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DLY7" edc:desc="Delay 7 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DLY8" edc:desc="Delay 8 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DLY9" edc:desc="Delay 9 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DLY10" edc:desc="Delay 10 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DLY11" edc:desc="Delay 11 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DLY12" edc:desc="Delay 12 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DLY13" edc:desc="Delay 13 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DLY14" edc:desc="Delay 14 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DLY15" edc:desc="Delay 15 CLK_ADC cycles" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="INITDLY" edc:nzwidth="0x3" edc:desc="Initial Delay Selection">
                <edc:SFRFieldSemantic edc:cname="DLY0" edc:desc="Delay 0 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DLY16" edc:desc="Delay 16 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DLY32" edc:desc="Delay 32 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DLY64" edc:desc="Delay 64 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DLY128" edc:desc="Delay 128 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DLY256" edc:desc="Delay 256 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x604">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:nzwidth="0x3" edc:desc="Window Comparator Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SAMPCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x605">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPLEN" edc:nzwidth="0x8" edc:desc="Sample lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x606"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXPOS" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x608">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x7" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x7F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x7F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x7F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x7F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x7F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x7F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x7F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x7F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x7F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x7F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x7F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x7F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="AIN16" edc:desc="ADC input pin 16" edc:when="(field &amp; 0x7F) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="AIN17" edc:desc="ADC input pin 17" edc:when="(field &amp; 0x7F) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="AIN18" edc:desc="ADC input pin 18" edc:when="(field &amp; 0x7F) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="AIN19" edc:desc="ADC input pin 19" edc:when="(field &amp; 0x7F) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AIN20" edc:desc="ADC input pin 20" edc:when="(field &amp; 0x7F) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="AIN21" edc:desc="ADC input pin 21" edc:when="(field &amp; 0x7F) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7F) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temperature sensor" edc:when="(field &amp; 0x7F) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0" edc:when="(field &amp; 0x7F) == 0x48"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXNEG" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x609">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x7" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x7F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x7F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x7F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x7F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x7F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x7F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x7F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x7F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x7F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x7F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x7F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x7F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7F) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0" edc:when="(field &amp; 0x7F) == 0x48"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="COMMAND" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x60A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="STCONV" edc:nzwidth="0x1" edc:desc="Start Conversion"/>
              <edc:SFRFieldDef edc:cname="SPCONV" edc:nzwidth="0x1" edc:desc="Stop Conversion"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x60B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x60C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x60D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Flag"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x60E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x60F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="RES" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x610"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x612"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINHT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x614"/>
        <edc:AdjustPoint edc:offset="0x6A" edc:_addr="0x616"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x680">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMALL" edc:desc="Small hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LARGE" edc:desc="Large hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="POWER" edc:nzwidth="0x2" edc:desc="Power profile">
                <edc:SFRFieldSemantic edc:cname="PROFILE0" edc:desc="Power profile 0, Shortest response time, highest consumption" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE1" edc:desc="Power profile 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE2" edc:desc="Power profile 2" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x681">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="WINSEL" edc:nzwidth="0x2" edc:desc="Window selection mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Window function disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL1" edc:desc="Select ACn+1 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL2" edc:desc="Select ACn+2 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="MUXCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x682">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINN2" edc:desc="Negative Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DACREF" edc:desc="DAC Reference" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINP0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINP1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINP2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AINP3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITVAL" edc:nzwidth="0x1" edc:desc="AC Output Initial Value">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output initialized to 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output initialized to 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x683"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="DAC0REF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:_addr="0x685">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="DACREF" edc:nzwidth="0x8" edc:desc="DACREF"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x31" edc:_addr="0x686">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Window interrupt when input above both references" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Window interrupt when input betweeen references" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Window interrupt when input below both references" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Window interrupt when input outside reference" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nn-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD1" edc:_addr="0x687">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMPIF" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CMPSTATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WINSTATE" edc:nzwidth="0x2" edc:desc="Analog Comparator Window State">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above window" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside window" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below window" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x688">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMALL" edc:desc="Small hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LARGE" edc:desc="Large hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="POWER" edc:nzwidth="0x2" edc:desc="Power profile">
                <edc:SFRFieldSemantic edc:cname="PROFILE0" edc:desc="Power profile 0, Shortest response time, highest consumption" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE1" edc:desc="Power profile 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE2" edc:desc="Power profile 2" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x689">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="WINSEL" edc:nzwidth="0x2" edc:desc="Window selection mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Window function disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL1" edc:desc="Select ACn+1 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL2" edc:desc="Select ACn+2 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="MUXCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x68A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINN2" edc:desc="Negative Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DACREF" edc:desc="DAC Reference" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINP0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINP1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINP2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AINP3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITVAL" edc:nzwidth="0x1" edc:desc="AC Output Initial Value">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output initialized to 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output initialized to 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x68B"/>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="DAC1REF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:_addr="0x68D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="DACREF" edc:nzwidth="0x8" edc:desc="DACREF"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x31" edc:_addr="0x68E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Window interrupt when input above both references" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Window interrupt when input betweeen references" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Window interrupt when input below both references" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Window interrupt when input outside reference" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nn-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD1" edc:_addr="0x68F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC1">
              <edc:SFRFieldDef edc:cname="CMPIF" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CMPSTATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WINSTATE" edc:nzwidth="0x2" edc:desc="Analog Comparator Window State">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above window" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside window" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below window" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x690">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMALL" edc:desc="Small hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LARGE" edc:desc="Large hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="POWER" edc:nzwidth="0x2" edc:desc="Power profile">
                <edc:SFRFieldSemantic edc:cname="PROFILE0" edc:desc="Power profile 0, Shortest response time, highest consumption" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE1" edc:desc="Power profile 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE2" edc:desc="Power profile 2" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x691">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="WINSEL" edc:nzwidth="0x2" edc:desc="Window selection mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Window function disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL1" edc:desc="Select ACn+1 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="UPSEL2" edc:desc="Select ACn+2 as upper limit in window compare" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="MUXCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x692">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINN2" edc:desc="Negative Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DACREF" edc:desc="DAC Reference" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINP0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINP1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINP2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AINP3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITVAL" edc:nzwidth="0x1" edc:desc="AC Output Initial Value">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output initialized to 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output initialized to 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x693"/>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="DAC2REF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:_addr="0x695">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="DACREF" edc:nzwidth="0x8" edc:desc="DACREF"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x31" edc:_addr="0x696">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Window interrupt when input above both references" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Window interrupt when input betweeen references" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Window interrupt when input below both references" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Window interrupt when input outside reference" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nn-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD1" edc:_addr="0x697">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC2">
              <edc:SFRFieldDef edc:cname="CMPIF" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CMPSTATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WINSTATE" edc:nzwidth="0x2" edc:desc="Analog Comparator Window State">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above window" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside window" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below window" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x698"/>
        <edc:SFRDef ltx:memberofperipheral="DAC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC1" edc:_addr="0x6A0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DAC Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Buffer Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6A1"/>
        <edc:SFRDef ltx:memberofperipheral="DAC0" edc:cname="DATA" edc:nzwidth="0x10" edc:access="nnnnnnnnnn------" edc:impl="0xFFC0" edc:_addr="0x6A2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC0">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0xA" edc:desc="Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x6A4"/>
        <edc:SFRDef ltx:memberofperipheral="ZCD0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn--n--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC9" edc:_addr="0x6C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert signal from pin"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6C1"/>
        <edc:SFRDef ltx:memberofperipheral="ZCD0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x6C2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD0">
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No interrupt" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on rising input signal" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on falling input signal" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Interrupt on both rising and falling input signal" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ZCD0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="---n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x11" edc:_addr="0x6C3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD0">
              <edc:SFRFieldDef edc:cname="CROSSIF" edc:nzwidth="0x1" edc:desc="ZCD Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x1" edc:desc="ZCD State">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output is 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output is 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x6C4"/>
        <edc:SFRDef ltx:memberofperipheral="ZCD1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn--n--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC9" edc:_addr="0x6C8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert signal from pin"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6C9"/>
        <edc:SFRDef ltx:memberofperipheral="ZCD1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x6CA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD1">
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No interrupt" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on rising input signal" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on falling input signal" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Interrupt on both rising and falling input signal" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ZCD1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="---n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x11" edc:_addr="0x6CB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ZCD1">
              <edc:SFRFieldDef edc:cname="CROSSIF" edc:nzwidth="0x1" edc:desc="ZCD Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x1" edc:desc="ZCD State">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output is 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output is 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x134" edc:_addr="0x6CC"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x800">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x801">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x802">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x803">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x804">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x805">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x806">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x807">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x808"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x80A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x80D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x80E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x80F"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x820">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x821">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x822">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x823">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x824">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x825">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x826">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x827">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x828"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x82A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x82D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x82E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x82F"/>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x840">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x841">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x842">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x843">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x844">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x845">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x846">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x847">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x848"/>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x84A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x84B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x84C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x84D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART2" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x84E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART2">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x84F"/>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x860">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x861">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x862">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x863">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x864">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x865">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x866">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x867">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x868"/>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x86A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x86B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x86C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x86D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART3" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x86E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART3">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x86F"/>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x880">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x881">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x882">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x883">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x884">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x885">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x886">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x887">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x888"/>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x88A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x88B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x88C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x88D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART4" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x88E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART4">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x71" edc:_addr="0x88F"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-nnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5E" edc:_addr="0x900">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="FM Plus Enable">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Operating in Standard-mode or Fast-mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Operating in Fast-mode Plus" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x1" edc:desc="SDA Setup Time">
                <edc:SFRFieldSemantic edc:cname="4CYC" edc:desc="SDA setup time is 4 clock cycles" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CYC" edc:desc="SDA setup time is 8 clock cycles" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="INPUTLVL" edc:nzwidth="0x1" edc:desc="Input Voltage Transition Level">
                <edc:SFRFieldSemantic edc:cname="I2C" edc:desc="I2C input voltage transition level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMBUS" edc:desc="SMBus 3.0 input voltage transition level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="DUALCTRL" edc:nzwidth="0x8" edc:access="-n--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x4F" edc:_addr="0x901">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Dual Control Enable"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="FM Plus Enable"/>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INPUTLVL" edc:nzwidth="0x1" edc:desc="Input Voltage Transition Level">
                <edc:SFRFieldSemantic edc:cname="I2C" edc:desc="I2C input voltage transition level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMBUS" edc:desc="SMBus 3.0 input voltage transition level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x902">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x903">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Host"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x2" edc:desc="Inactive Bus Timeout">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Timeout Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50 Microseconds" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100 Microseconds" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200 Microseconds" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:nzwidth="0x1" edc:desc="Write Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:nzwidth="0x1" edc:desc="Read Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x904">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="MCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Issue Repeated Start Condition" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Receive or Transmit Data, depending on DIR" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Issue Stop Condition" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="Flush"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MSTATUS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x905">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown Bus State" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is Idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This Module Controls The Bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The Bus is Busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:nzwidth="0x1" edc:desc="Write Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:nzwidth="0x1" edc:desc="Read Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MBAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x906"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x907"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x908"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLA" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x909">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Client"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:nzwidth="0x1" edc:desc="Promiscuous Mode Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:nzwidth="0x1" edc:desc="Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x90A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Used To Complete a Transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in Response to Address/Data Interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SSTATUS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x90B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x1" edc:desc="Client Address or Stop">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop condition generated APIF" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated APIF" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:nzwidth="0x1" edc:desc="Data Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x90C"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x90D"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDRMASK" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x90E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x90F"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-nnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5E" edc:_addr="0x920">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="FM Plus Enable">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Operating in Standard-mode or Fast-mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Operating in Fast-mode Plus" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x1" edc:desc="SDA Setup Time">
                <edc:SFRFieldSemantic edc:cname="4CYC" edc:desc="SDA setup time is 4 clock cycles" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CYC" edc:desc="SDA setup time is 8 clock cycles" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="INPUTLVL" edc:nzwidth="0x1" edc:desc="Input Voltage Transition Level">
                <edc:SFRFieldSemantic edc:cname="I2C" edc:desc="I2C input voltage transition level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMBUS" edc:desc="SMBus 3.0 input voltage transition level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="DUALCTRL" edc:nzwidth="0x8" edc:access="-n--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x4F" edc:_addr="0x921">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Dual Control Enable"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="FM Plus Enable"/>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INPUTLVL" edc:nzwidth="0x1" edc:desc="Input Voltage Transition Level">
                <edc:SFRFieldSemantic edc:cname="I2C" edc:desc="I2C input voltage transition level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMBUS" edc:desc="SMBus 3.0 input voltage transition level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x922">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MCTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x923">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Host"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x2" edc:desc="Inactive Bus Timeout">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Timeout Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50 Microseconds" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100 Microseconds" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200 Microseconds" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:nzwidth="0x1" edc:desc="Write Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:nzwidth="0x1" edc:desc="Read Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x924">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="MCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Issue Repeated Start Condition" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Receive or Transmit Data, depending on DIR" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Issue Stop Condition" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="Flush"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MSTATUS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x925">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown Bus State" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is Idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This Module Controls The Bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The Bus is Busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:nzwidth="0x1" edc:desc="Write Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:nzwidth="0x1" edc:desc="Read Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MBAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x926"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x927"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="MDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x928"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SCTRLA" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x929">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Client"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:nzwidth="0x1" edc:desc="Promiscuous Mode Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:nzwidth="0x1" edc:desc="Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SCTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x92A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Used To Complete a Transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in Response to Address/Data Interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SSTATUS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x92B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x1" edc:desc="Client Address or Stop">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop condition generated APIF" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated APIF" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:nzwidth="0x1" edc:desc="Data Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x92C"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x92D"/>
        <edc:SFRDef ltx:memberofperipheral="TWI1" edc:cname="SADDRMASK" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x92E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI1">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x92F"/>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x940">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Module"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:nzwidth="0x1" edc:desc="Enable Double Speed"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:nzwidth="0x1" edc:desc="Host Operation Enable"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order Setting"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x941">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="SPI Mode">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:nzwidth="0x1" edc:desc="SPI Select Disable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:nzwidth="0x1" edc:desc="Buffer Mode Wait for Receive"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:nzwidth="0x1" edc:desc="Buffer Mode Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x942">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="IE" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transfer Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x943">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIF" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WRCOL" edc:nzwidth="0x1" edc:desc="Write Collision"/>
              <edc:SFRFieldDef edc:cname="IF" edc:nzwidth="0x1" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x944"/>
        <edc:AdjustPoint edc:offset="0x1B" edc:_addr="0x945"/>
        <edc:SFRDef ltx:memberofperipheral="SPI1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x960">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Module"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:nzwidth="0x1" edc:desc="Enable Double Speed"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:nzwidth="0x1" edc:desc="Host Operation Enable"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order Setting"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x961">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI1">
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="SPI Mode">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:nzwidth="0x1" edc:desc="SPI Select Disable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:nzwidth="0x1" edc:desc="Buffer Mode Wait for Receive"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:nzwidth="0x1" edc:desc="Buffer Mode Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x962">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI1">
              <edc:SFRFieldDef edc:cname="IE" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transfer Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x963">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI1">
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIF" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WRCOL" edc:nzwidth="0x1" edc:desc="Write Collision"/>
              <edc:SFRFieldDef edc:cname="IF" edc:nzwidth="0x1" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI1" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x964"/>
        <edc:AdjustPoint edc:offset="0x19B" edc:_addr="0x965"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="Use CLK_TCA from TCA1" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB01">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB02"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB04">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB05">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB06">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB07">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB08">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB09"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB0A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB0C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB0E"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB10">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="Use CLK_TCA from TCA1" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB11">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB12"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB14">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB15">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB16">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB17">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB18">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB19"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB1A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB1C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB1E"/>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB20">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="Use CLK_TCA from TCA1" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB21">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB22"/>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB24">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB25">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB26">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB27">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB28">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB2">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB29"/>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB2A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB2" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB2C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB2E"/>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB30">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA1" edc:desc="Use CLK_TCA from TCA1" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB31">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB32"/>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB34">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB35">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB36">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB37">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB38">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB3">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB39"/>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB3A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB3" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB3C"/>
        <edc:AdjustPoint edc:offset="0x42" edc:_addr="0xB3E"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="SYNCPRES" edc:nzwidth="0x2" edc:desc="Synchronization prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Selected clock source divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Selected clock source divided by 2" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Selected clock source divided by 4" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Selected clock source divided by 8" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CNTPRES" edc:nzwidth="0x2" edc:desc="Counter prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Sync clock divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Sync clock divided by 4" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Sync clock divided by 32" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock select">
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal High-Frequency Oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PLL" edc:desc="PLL" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x2" edc:desc="Waveform generation mode">
                <edc:SFRFieldSemantic edc:cname="ONERAMP" edc:desc="One ramp mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TWORAMP" edc:desc="Two ramp mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FOURRAMP" edc:desc="Four ramp mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DS" edc:desc="Dual slope mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nn--n-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCB" edc:_addr="0xB82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPOVR" edc:nzwidth="0x1" edc:desc="Compare output value override"/>
              <edc:SFRFieldDef edc:cname="AUPDATE" edc:nzwidth="0x1" edc:desc="Auto update"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FIFTY" edc:nzwidth="0x1" edc:desc="Fifty percent waveform"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="CMPCSEL" edc:nzwidth="0x1" edc:desc="Compare C output select">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMPDSEL" edc:nzwidth="0x1" edc:desc="Compare D output select">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPAVAL" edc:nzwidth="0x4" edc:desc="Compare A value"/>
              <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x4" edc:desc="Compare B value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0xB84">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="SYNCEOC" edc:nzwidth="0x1" edc:desc="Synchronize end of cycle strobe"/>
              <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="synchronize strobe"/>
              <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Restart strobe"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREA" edc:nzwidth="0x1" edc:desc="Software Capture A Strobe"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREB" edc:nzwidth="0x1" edc:desc="Software Capture B Strobe"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="DISEOC" edc:nzwidth="0x1" edc:desc="Disable at end of cycle"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xB85"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="EVCTRLA" edc:nzwidth="0x8" edc:access="nn-n-n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:_addr="0xB88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:nzwidth="0x1" edc:desc="Trigger event enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x1" edc:desc="Event action">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Edge select">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:nzwidth="0x2" edc:desc="Event config">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="EVCTRLB" edc:nzwidth="0x8" edc:access="nn-n-n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:_addr="0xB89">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:nzwidth="0x1" edc:desc="Trigger event enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x1" edc:desc="Event action">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Edge select">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:nzwidth="0x2" edc:desc="Event config">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB8A"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="----nn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0xB8C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow interrupt enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:nzwidth="0x1" edc:desc="Trigger A interrupt enable"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:nzwidth="0x1" edc:desc="Trigger B interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="----nn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0xB8D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow interrupt enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:nzwidth="0x1" edc:desc="Trigger A interrupt enable"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:nzwidth="0x1" edc:desc="Trigger B interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nn----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC3" edc:_addr="0xB8E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="ENRDY" edc:nzwidth="0x1" edc:desc="Enable ready"/>
              <edc:SFRFieldDef edc:cname="CMDRDY" edc:nzwidth="0x1" edc:desc="Command ready"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="PWMACTA" edc:nzwidth="0x1" edc:desc="PWM activity on A"/>
              <edc:SFRFieldDef edc:cname="PWMACTB" edc:nzwidth="0x1" edc:desc="PWM activity on B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xB8F"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INPUTCTRLA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xB90">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:nzwidth="0x4" edc:desc="Input mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INPUTCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xB91">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:nzwidth="0x4" edc:desc="Input mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="FAULTCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB92">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPA" edc:nzwidth="0x1" edc:desc="Compare A value"/>
              <edc:SFRFieldDef edc:cname="CMPB" edc:nzwidth="0x1" edc:desc="Compare B value"/>
              <edc:SFRFieldDef edc:cname="CMPC" edc:nzwidth="0x1" edc:desc="Compare C value"/>
              <edc:SFRFieldDef edc:cname="CMPD" edc:nzwidth="0x1" edc:desc="Compare D vaule"/>
              <edc:SFRFieldDef edc:cname="CMPAEN" edc:nzwidth="0x1" edc:desc="Compare A enable"/>
              <edc:SFRFieldDef edc:cname="CMPBEN" edc:nzwidth="0x1" edc:desc="Compare B enable"/>
              <edc:SFRFieldDef edc:cname="CMPCEN" edc:nzwidth="0x1" edc:desc="Compare C enable"/>
              <edc:SFRFieldDef edc:cname="CMPDEN" edc:nzwidth="0x1" edc:desc="Compare D enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xB93"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DLYCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0xB94">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DLYSEL" edc:nzwidth="0x2" edc:desc="Delay select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No delay" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INBLANK" edc:desc="Input blanking enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event delay enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYTRIG" edc:nzwidth="0x2" edc:desc="Delay trigger">
                <edc:SFRFieldSemantic edc:cname="CMPASET" edc:desc="Compare A set" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CMPACLR" edc:desc="Compare A clear" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CMPBSET" edc:desc="Compare B set" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CMPBCLR" edc:desc="Compare B clear" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYPRESC" edc:nzwidth="0x2" edc:desc="Delay prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No prescaling" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescale with 2" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescale with 4" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescale with 8" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DLYVAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB95">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DLYVAL" edc:nzwidth="0x8" edc:desc="Delay value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB96"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DITCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB98">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DITHERSEL" edc:nzwidth="0x2" edc:desc="Dither select">
                <edc:SFRFieldSemantic edc:cname="ONTIMEB" edc:desc="On-time ramp B" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ONTIMEAB" edc:desc="On-time ramp A and B" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEB" edc:desc="Dead-time rampB" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEAB" edc:desc="Dead-time ramp A and B" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DITVAL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xB99">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x4" edc:desc="Dither value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xB9A"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0xB9E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FAULTDET" edc:nzwidth="0x1" edc:desc="Fault detection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xB9F"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CAPTUREA" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0xBA2"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CAPTUREB" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0xBA4"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xBA6"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPASET" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xBA8"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPACLR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xBAA"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPBSET" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xBAC"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPBCLR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xBAE"/>
        <edc:AdjustPoint edc:offset="0x351" edc:_addr="0xBB0"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="REVID" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF01"/>
        <edc:AdjustPoint edc:offset="0x16" edc:_addr="0xF02"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="OCDMCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF18"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="OCDMSTATUS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xF19">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSCFG">
              <edc:SFRFieldDef edc:cname="OCDMR" edc:nzwidth="0x1" edc:desc="OCD Message Read"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE6" edc:_addr="0xF1A"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x1000">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x7" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x7F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NOOP" edc:desc="No Operation" edc:when="(field &amp; 0x7F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FLWR" edc:desc="Flash Write" edc:when="(field &amp; 0x7F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FLPER" edc:desc="Flash Page Erase" edc:when="(field &amp; 0x7F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="FLMPER2" edc:desc="Flash Multi-Page Erase 2 pages" edc:when="(field &amp; 0x7F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="FLMPER4" edc:desc="Flash Multi-Page Erase 4 pages" edc:when="(field &amp; 0x7F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="FLMPER8" edc:desc="Flash Multi-Page Erase 8 pages" edc:when="(field &amp; 0x7F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="FLMPER16" edc:desc="Flash Multi-Page Erase 16 pages" edc:when="(field &amp; 0x7F) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="FLMPER32" edc:desc="Flash Multi-Page Erase 32 pages" edc:when="(field &amp; 0x7F) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="EEWR" edc:desc="EEPROM Write" edc:when="(field &amp; 0x7F) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="EEERWR" edc:desc="EEPROM Erase and Write" edc:when="(field &amp; 0x7F) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="EEBER" edc:desc="EEPROM Byte Erase" edc:when="(field &amp; 0x7F) == 0x18"/>
                <edc:SFRFieldSemantic edc:cname="EEMBER2" edc:desc="EEPROM Multi-Byte Erase 2 bytes" edc:when="(field &amp; 0x7F) == 0x19"/>
                <edc:SFRFieldSemantic edc:cname="EEMBER4" edc:desc="EEPROM Multi-Byte Erase 4 bytes" edc:when="(field &amp; 0x7F) == 0x1A"/>
                <edc:SFRFieldSemantic edc:cname="EEMBER8" edc:desc="EEPROM Multi-Byte Erase 8 bytes" edc:when="(field &amp; 0x7F) == 0x1B"/>
                <edc:SFRFieldSemantic edc:cname="EEMBER16" edc:desc="EEPROM Multi-Byte Erase 16 bytes" edc:when="(field &amp; 0x7F) == 0x1C"/>
                <edc:SFRFieldSemantic edc:cname="EEMBER32" edc:desc="EEPROM Multi-Byte Erase 32 bytes" edc:when="(field &amp; 0x7F) == 0x1D"/>
                <edc:SFRFieldSemantic edc:cname="CHER" edc:desc="Chip Erase Command" edc:when="(field &amp; 0x7F) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="EECHER" edc:desc="EEPROM Erase Command" edc:when="(field &amp; 0x7F) == 0x30"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="n-nn-nnn" edc:por="00110000" edc:mclr="00110000" edc:impl="0xB7" edc:_addr="0x1001">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="APPCODEWP" edc:nzwidth="0x1" edc:desc="Application Code Write Protect"/>
              <edc:SFRFieldDef edc:cname="BOOTRP" edc:nzwidth="0x1" edc:desc="Boot Read Protect"/>
              <edc:SFRFieldDef edc:cname="APPDATAWP" edc:nzwidth="0x1" edc:desc="Application Data Write Protect"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FLMAP" edc:nzwidth="0x2" edc:desc="Flash Mapping in Data space">
                <edc:SFRFieldSemantic edc:cname="SECTION0" edc:desc="Flash section 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SECTION1" edc:desc="Flash section 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SECTION2" edc:desc="Flash section 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SECTION3" edc:desc="Flash section 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FLMAPLOCK" edc:nzwidth="0x1" edc:desc="Flash Mapping Lock"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-rrr--rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:_addr="0x1002">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="FBUSY" edc:nzwidth="0x1" edc:desc="Flash busy"/>
              <edc:SFRFieldDef edc:cname="EEBUSY" edc:nzwidth="0x1" edc:desc="EEPROM busy"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x3" edc:desc="Write error">
                <edc:SFRFieldSemantic edc:cname="NOERROR" edc:desc="No Error" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ILLEGALCMD" edc:desc="Write command not selected" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ILLEGALSADDR" edc:desc="Write to section not allowed" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DOUBLESELECT" edc:desc="Selecting new write command while write command already seleted" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ONGOINGPROG" edc:desc="Starting a new programming operation before previous is completed" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1003">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1004">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1005"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="DATA" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x1006"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x1008"/>
      </edc:SFRDataSector>
      <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x1040" edc:endaddr="0x1044" edc:magicoffset="0x830000" atdf:pagesize="0x1" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="LOCK" edc:cname="KEY" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x5CC5C55C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x1040">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCK">
              <edc:DCRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Lock Key">
                <edc:DCRFieldSemantic edc:cname="NOLOCK" edc:desc="No locks" edc:when="(field &amp; 0xFFFFFFFF) == 0x5CC5C55C"/>
                <edc:DCRFieldSemantic edc:cname="RWLOCK" edc:desc="Read and write lock" edc:when="(field &amp; 0xFFFFFFFF) == 0xA33A3AA3"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x1050" edc:endaddr="0x1059" edc:magicoffset="0x820000" atdf:pagesize="0x1" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="WDTCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1050">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Watchdog Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Watch-Dog timer Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.0s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.0s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Watchdog Window Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Window mode off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.0s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.0s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BODCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1051">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="BOD Operation in Sleep Mode">
                <edc:DCRFieldSemantic edc:cname="DISABLE" edc:desc="BOD disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLE" edc:desc="BOD enabled in continuous mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLE" edc:desc="BOD enabled in sampled mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="BOD Operation in Active Mode">
                <edc:DCRFieldSemantic edc:cname="DISABLE" edc:desc="BOD disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLE" edc:desc="BOD enabled in continuous mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLE" edc:desc="BOD enabled in sampled mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="ENABLEWAIT" edc:desc="BOD enabled in continuous mode. Execution is halted at wake-up until BOD is running." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="BOD Sample Frequency">
                <edc:DCRFieldSemantic edc:cname="128Hz" edc:desc="Sample frequency is 128 Hz" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="32Hz" edc:desc="Sample frequency is 32 Hz" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="BOD Level">
                <edc:DCRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.9V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL1" edc:desc="2.45V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.7V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL3" edc:desc="2.85V" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="OSCCFG" edc:nzwidth="0x8" edc:impl="0x7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="-----nnn" edc:_addr="0x1052">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Frequency Select">
                <edc:DCRFieldSemantic edc:cname="OSCHF" edc:desc="1-32MHz internal oscillator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="OSC32K" edc:desc="32.768kHz internal oscillator" edc:when="(field &amp; 0x7) == 0x01"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x1053"/>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG0" edc:nzwidth="0x8" edc:impl="0xED" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xC0" edc:access="nnn-nn-n" edc:_addr="0x1055">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="EEPROM Save">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="RSTPINCFG" edc:nzwidth="0x2" edc:desc="Reset Pin Configuration">
                <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="GPIO mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="RST" edc:desc="Reset mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="CRCSEL" edc:nzwidth="0x1" edc:desc="CRC Select">
                <edc:DCRFieldSemantic edc:cname="CRC16" edc:desc="Enable CRC16" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="CRC32" edc:desc="Enable CRC32" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:DCRFieldSemantic edc:cname="FLASH" edc:desc="CRC of full Flash (boot, application code and application data)" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BOOT" edc:desc="CRC of boot section" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BOOTAPP" edc:desc="CRC of application code and boot sections" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="NOCRC" edc:desc="No CRC" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG1" edc:nzwidth="0x8" edc:impl="0x7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="-----nnn" edc:_addr="0x1056">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SUT" edc:nzwidth="0x3" edc:desc="Startup Time">
                <edc:DCRFieldSemantic edc:cname="0MS" edc:desc="0 ms" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="1MS" edc:desc="1 ms" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="2MS" edc:desc="2 ms" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="4MS" edc:desc="4 ms" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="8MS" edc:desc="8 ms" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="16MS" edc:desc="16 ms" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="32MS" edc:desc="32 ms" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="64MS" edc:desc="64 ms" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="CODESIZE" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1057">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="CODESIZE" edc:nzwidth="0x8" edc:desc="Code Section Size"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BOOTSIZE" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1058">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="BOOTSIZE" edc:nzwidth="0x8" edc:desc="Boot Section Size"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:UserIDSector edc:regionid="USER_SIGNATURES" edc:beginaddr="0x1080" edc:endaddr="0x10A0" edc:magicoffset="0x850000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1080"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1081"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1082"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1083"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1084"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1085"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1086"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1087"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1088"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1089"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x108F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW16" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1090"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW17" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1091"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW18" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1092"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW19" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1093"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW20" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1094"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW21" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1095"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW22" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1096"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW23" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1097"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW24" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1098"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW25" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1099"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW26" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW27" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW28" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW29" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW30" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW31" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x109F"/>
      </edc:UserIDSector>
      <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x1100" edc:endaddr="0x1103" atdf:pagesize="0x80" edc:value="0x1E9532" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1100"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1101"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1102"/>
      </edc:DeviceIDSector>
      <edc:DeviceIDSector edc:regionid="PROD_SIGNATURES" edc:beginaddr="0x1103" edc:endaddr="0x1180" atdf:pagesize="0x80" edc:value="0x1E9532" edc:mask="0xffffff" edc:rw="r">
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1103"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE0" edc:nzwidth="0x10" edc:impl="0xFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFF" edc:factorydefault="0x0" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x1104">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="SIGROW">
              <edc:DCRFieldDef edc:cname="TEMPSENSE0" edc:nzwidth="0x10" edc:desc="Temperature Calibration 0"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE1" edc:nzwidth="0x10" edc:impl="0xFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFF" edc:factorydefault="0x0" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x1106">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="SIGROW">
              <edc:DCRFieldDef edc:cname="TEMPSENSE1" edc:nzwidth="0x10" edc:desc="Temperature Calibration 1"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x1108"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1110"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1111"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1112"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM3" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1113"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM4" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1114"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM5" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1115"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM6" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1116"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM7" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1117"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM8" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1118"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM9" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1119"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM10" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111A"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM11" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111B"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM12" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111C"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM13" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111D"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM14" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111E"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM15" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111F"/>
      </edc:DeviceIDSector>
      <edc:EEDataSector edc:regionid="EEPROM" edc:beginaddr="0x811400" edc:endaddr="0x811600" edc:magicoffset="0x810000" atdf:pagesize="0x1" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="INTERNAL_SRAM" edc:beginaddr="0x7000" edc:endaddr="0x8000" edc:isexecutable="false" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="MAPPED_PROGMEM" edc:beginaddr="0x8000" edc:endaddr="0x10000" atdf:pagesize="0x200" edc:isexecutable="false" edc:rw="rw"/>
    </edc:RegardlessOfMode>
    <edc:RegisterMap edc:id="TCA0/SINGLE">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x3" edc:desc="Waveform generation mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Frequency Generation Mode" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPE" edc:desc="Single Slope PWM" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual Slope PWM, overflow on TOP" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual Slope PWM, overflow on TOP and BOTTOM" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual Slope PWM, overflow on BOTTOM" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALUPD" edc:nzwidth="0x1" edc:desc="Auto Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMP0EN" edc:nzwidth="0x1" edc:desc="Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1EN" edc:nzwidth="0x1" edc:desc="Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2EN" edc:nzwidth="0x1" edc:desc="Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMP0OV" edc:nzwidth="0x1" edc:desc="Compare 0 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP1OV" edc:nzwidth="0x1" edc:desc="Compare 1 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP2OV" edc:nzwidth="0x1" edc:desc="Compare 2 Waveform Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="Count up" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOWN" edc:desc="Count down" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0xA09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CNTAEI" edc:nzwidth="0x1" edc:desc="Count on Event Input A"/>
            <edc:SFRFieldDef edc:cname="EVACTA" edc:nzwidth="0x3" edc:desc="Event Action A">
              <edc:SFRFieldSemantic edc:cname="CNT_POSEDGE" edc:desc="Count on positive edge event" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CNT_ANYEDGE" edc:desc="Count on any edge event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CNT_HIGHLVL" edc:desc="Count on prescaled clock while event line is 1." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTBEI" edc:nzwidth="0x1" edc:desc="Count on Event Input B"/>
            <edc:SFRFieldDef edc:cname="EVACTB" edc:nzwidth="0x3" edc:desc="Event Action B">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_POSEDGE" edc:desc="Restart counter at positive edge event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_ANYEDGE" edc:desc="Restart counter on any edge event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_HIGHLVL" edc:desc="Restart counter while event line is 1." edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA0F"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA36"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA38"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3C"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA0/SPLIT">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0EN" edc:nzwidth="0x1" edc:desc="Low Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1EN" edc:nzwidth="0x1" edc:desc="Low Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2EN" edc:nzwidth="0x1" edc:desc="Low Compare 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0EN" edc:nzwidth="0x1" edc:desc="High Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP1EN" edc:nzwidth="0x1" edc:desc="High Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP2EN" edc:nzwidth="0x1" edc:desc="High Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0OV" edc:nzwidth="0x1" edc:desc="Low Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP1OV" edc:nzwidth="0x1" edc:desc="Low Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP2OV" edc:nzwidth="0x1" edc:desc="Low Compare 2 Output Value"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0OV" edc:nzwidth="0x1" edc:desc="High Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP1OV" edc:nzwidth="0x1" edc:desc="High Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP2OV" edc:nzwidth="0x1" edc:desc="High Compare 2 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA21"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA27"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA29"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2B"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2D"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA1/SINGLE">
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0xA41">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x3" edc:desc="Waveform generation mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Frequency Generation Mode" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPE" edc:desc="Single Slope PWM" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual Slope PWM, overflow on TOP" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual Slope PWM, overflow on TOP and BOTTOM" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual Slope PWM, overflow on BOTTOM" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALUPD" edc:nzwidth="0x1" edc:desc="Auto Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMP0EN" edc:nzwidth="0x1" edc:desc="Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1EN" edc:nzwidth="0x1" edc:desc="Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2EN" edc:nzwidth="0x1" edc:desc="Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA42">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="CMP0OV" edc:nzwidth="0x1" edc:desc="Compare 0 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP1OV" edc:nzwidth="0x1" edc:desc="Compare 1 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP2OV" edc:nzwidth="0x1" edc:desc="Compare 2 Waveform Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA43">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA45">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="Count up" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOWN" edc:desc="Count down" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLFCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA46">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLFSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA47">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0xA49">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="CNTAEI" edc:nzwidth="0x1" edc:desc="Count on Event Input A"/>
            <edc:SFRFieldDef edc:cname="EVACTA" edc:nzwidth="0x3" edc:desc="Event Action A">
              <edc:SFRFieldSemantic edc:cname="CNT_POSEDGE" edc:desc="Count on positive edge event" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CNT_ANYEDGE" edc:desc="Count on any edge event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CNT_HIGHLVL" edc:desc="Count on prescaled clock while event line is 1." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTBEI" edc:nzwidth="0x1" edc:desc="Count on Event Input B"/>
            <edc:SFRFieldDef edc:cname="EVACTB" edc:nzwidth="0x3" edc:desc="Event Action B">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_POSEDGE" edc:desc="Restart counter at positive edge event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_ANYEDGE" edc:desc="Restart counter on any edge event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_HIGHLVL" edc:desc="Restart counter while event line is 1." edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA4A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA4B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA4E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA4F"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA60"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA66"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA68"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA6A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA6C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA76"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP0BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA78"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP1BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA7A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CMP2BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA7C"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA1/SPLIT">
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA41">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="LCMP0EN" edc:nzwidth="0x1" edc:desc="Low Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1EN" edc:nzwidth="0x1" edc:desc="Low Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2EN" edc:nzwidth="0x1" edc:desc="Low Compare 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0EN" edc:nzwidth="0x1" edc:desc="High Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP1EN" edc:nzwidth="0x1" edc:desc="High Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP2EN" edc:nzwidth="0x1" edc:desc="High Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA42">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="LCMP0OV" edc:nzwidth="0x1" edc:desc="Low Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP1OV" edc:nzwidth="0x1" edc:desc="Low Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP2OV" edc:nzwidth="0x1" edc:desc="Low Compare 2 Output Value"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0OV" edc:nzwidth="0x1" edc:desc="High Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP1OV" edc:nzwidth="0x1" edc:desc="High Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP2OV" edc:nzwidth="0x1" edc:desc="High Compare 2 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA43">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA45">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA4A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA4B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA4E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="LCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA60"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="HCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA61"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="LPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA66"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="HPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA67"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="LCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA68"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="HCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA69"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="LCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA6A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="HCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA6B"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="LCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA6C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA1" edc:cname="HCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA6D"/>
    </edc:RegisterMap>
  </edc:DataSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOB1D0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XY5" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WOC2D0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XY6" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="CLKOUT" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="ZCD0" ltx:memberofperipheral="ZCD0"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="ZCD1" ltx:memberofperipheral="ZCD1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WOD3D0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XY7" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0"/>
      <edc:VirtualPin edc:name="LUT4_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART3" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO0A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="XY8" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1"/>
      <edc:VirtualPin edc:name="LUT4_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART3" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO1A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="XY9" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2"/>
      <edc:VirtualPin edc:name="EVOUT1" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT4_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C1_ALT2" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="SDA_DUAL" edc:ppsfunction="I2C1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO2A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART3" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="XY10" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3"/>
      <edc:VirtualPin edc:name="LUT4_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C1_ALT2" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="SCL_DUAL" edc:ppsfunction="I2C1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO3A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART3" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="XY11" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI1_ALT2" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART3_ALT1" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="WO0B2" edc:ppsfunction="TCB2_ALT1" ltx:memberofperipheral="TCB2"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO4A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="WOAD0" edc:ppsfunction="TCD0_ALT1" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XY12" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI1_ALT2" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART3_ALT1" ltx:memberofperipheral="USART3"/>
      <edc:VirtualPin edc:name="WO0B3" edc:ppsfunction="TCB3" ltx:memberofperipheral="TCB3"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT1" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO5A1" edc:ppsfunction="TCA1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="WOB1D0" edc:ppsfunction="TCD0_ALT1" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XY13" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC0"/>
      <edc:VirtualPin edc:name="LUT1_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO0B2" edc:ppsfunction="TCB2" ltx:memberofperipheral="TCB2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC1"/>
      <edc:VirtualPin edc:name="LUT1_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="WO0B3" edc:ppsfunction="TCB3_ALT1" ltx:memberofperipheral="TCB3"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC2"/>
      <edc:VirtualPin edc:name="EVOUT2" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT1_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0_ALT2" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SDA_DUAL" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0_ALT2" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SCL_DUAL" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC4"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI1_ALT1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART1_ALT1" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="WO0A1" edc:ppsfunction="TCA1_ALT1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC5"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI1_ALT1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART1_ALT1" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="WO1A1" edc:ppsfunction="TCA1_ALT1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC6"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC0_ALT1" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC1_ALT1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC2_ALT1" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI1_ALT1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="SDA_DUAL" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SDA_DUAL" edc:ppsfunction="I2C0_ALT2" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO2A1" edc:ppsfunction="TCA1_ALT1" ltx:memberofperipheral="TCA1"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART1_ALT1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC7"/>
      <edc:VirtualPin edc:name="EVOUT2" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="ZCD0_ALT1" ltx:memberofperipheral="ZCD0"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="ZCD1_ALT1" ltx:memberofperipheral="ZCD1"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SCL_DUAL" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SCL_DUAL" edc:ppsfunction="I2C0_ALT2" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI1_ALT1" ltx:memberofperipheral="SPI1"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART1_ALT1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD0"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY16" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD1"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="IN" edc:ppsfunction="ZCD0" ltx:memberofperipheral="ZCD0"/>
      <edc:VirtualPin edc:name="LUT2_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY17" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD2"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT3" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT2_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY18" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD3"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY19" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD4"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY20" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD5"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY21" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD6"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_OUT0" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="DAC0" ltx:memberofperipheral="DAC0"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="XY22" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD7"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT3" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="N2" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="N2" edc:ppsfunction="AC1" ltx:memberofperipheral="AC1"/>
      <edc:VirtualPin edc:name="N2" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="XY23" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AVDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AGND"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PE0"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0_ALT1" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTE"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART4" ltx:memberofperipheral="USART4"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT4" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY24" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PE1"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0_ALT1" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC2" ltx:memberofperipheral="AC2"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTE"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART4" ltx:memberofperipheral="USART4"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT4" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY25" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PE2"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT4" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTE"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0_ALT1" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT4" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART4" ltx:memberofperipheral="USART4"/>
      <edc:VirtualPin edc:name="XY26" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PE3"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="IN" edc:ppsfunction="ZCD1" ltx:memberofperipheral="ZCD1"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTE"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0_ALT1" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT4" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART4" ltx:memberofperipheral="USART4"/>
      <edc:VirtualPin edc:name="XY27" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF0"/>
      <edc:VirtualPin edc:name="AIN16" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART2" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOAD0" edc:ppsfunction="TCD0_ALT2" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XTAL32K1" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="XY32" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF1"/>
      <edc:VirtualPin edc:name="AIN17" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART2" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOB1D0" edc:ppsfunction="TCD0_ALT2" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XTAL32K2" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="XY33" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF2"/>
      <edc:VirtualPin edc:name="AIN18" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT5" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT3_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C1_ALT1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOC2D0" edc:ppsfunction="TCD0_ALT2" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART2" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="XY34" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF3"/>
      <edc:VirtualPin edc:name="AIN19" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C1_ALT1" ltx:memberofperipheral="TWI1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOD3D0" edc:ppsfunction="TCD0_ALT2" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART2" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="XY35" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF4"/>
      <edc:VirtualPin edc:name="AIN20" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART2_ALT1" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0_ALT1" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY36" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF5"/>
      <edc:VirtualPin edc:name="AIN21" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART2_ALT1" ltx:memberofperipheral="USART2"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1_ALT1" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY37" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF6"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="RESET" edc:ppsfunction="OTHER" ltx:memberofperipheral="RSTCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="UPDI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="EXTCLK" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY0" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XY1" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XY2" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XY3" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOAD0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="XY4" edc:ppsfunction="PTC" ltx:memberofperipheral="PTC"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
